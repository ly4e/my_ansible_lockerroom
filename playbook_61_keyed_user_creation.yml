---
- hosts: all
  become: true

  tasks:

    # User account configuration.
    - name: Add a deployment user.
      user:
        name: ansi
        shell: /bin/zsh
        state: present

    # Disable root login and use `sudo`.
    - name: Add sudo rights for deployment user.
      lineinfile:
        dest: /etc/sudoers
        regexp: '^ansi'
        line: 'ansi ALL=(ALL) NOPASSWD: ALL'
        state: present
        validate: 'visudo -cf %s'

    - name: Create authorized key
      authorized_key:
        #user: "{{ ansible_env.USER }}"  #copies the key to the user being connected to by ansible
        user: ansi
        key: "{{ item }}"
        validate_certs: False
      with_file:
        #- /home/ansible/.ssh/id_rsa.pub
        #- custom_key.pub
        - "{{ lookup('env','HOME') + '/.ssh/custom_ansi.pub' }}"
        #- https://github.com/ly4e.keys



#    # Remove unused software, open only required ports.
#    - name: Remove unused packages.
#      package:
#        name:
#          - nano
#          - sendmail
#        state: absent

    # # File permissions.
    # - name: Configure the permissions for the messages log.
    #   file:
    #     path: /var/log/messages
    #     owner: root
    #     group: root
    #     mode: 0600

    # # Automating updates for Debian systems.
    # - name: Install unattended upgrades package.
    #   apt:
    #     name: unattended-upgrades
    #     state: present
    #   when: ansible_os_family == 'Debian'

    # - name: Copy unattended-upgrades configuration files in place.
    #   template:
    #     src: "../templates/{{ item }}.j2"
    #     dest: "/etc/apt/apt.conf.d/{{ item }}"
    #     owner: root
    #     group: root
    #     mode: 0644
    #   with_items:
    #     - 20auto-upgrades
    #     - 50unattended-upgrades
    #   when: ansible_os_family == 'Debian'



    # # Monitor logins and block suspect IP addresses.
    # - name: Install fail2ban (Debian).
    #   apt:
    #     name: fail2ban
    #     state: present
    #   when: ansible_os_family == 'Debian'

    # - name: Ensure fail2ban is running and enabled on boot.
    #   service:
    #     name: fail2ban
    #     state: started
    #     enabled: yes

    # # Use SELinux (Security-Enhanced Linux).
    # - name: Install Python SELinux library.
    #   yum:
    #     name: python3-libselinux
    #     state: present

    # - name: Ensure SELinux is enabled in `targeted` mode.
    #   selinux:
    #     policy: targeted
    #     state: enforcing


